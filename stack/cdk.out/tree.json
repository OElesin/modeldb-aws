{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "verta-ai-aws-ecs-service": {
        "id": "verta-ai-aws-ecs-service",
        "path": "verta-ai-aws-ecs-service",
        "children": {
          "Vpc": {
            "id": "Vpc",
            "path": "verta-ai-aws-ecs-service/Vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "verta-ai-aws-ecs-service/Vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "verta-ai-aws-ecs-service/Vpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcPublicSubnet1EIPD7E02669",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet2Subnet691E08A3"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcPublicSubnet2EIP3C605A87",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet2Subnet691E08A3"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet1Subnet536B997A"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "verta-ai-aws-ecs-service/Vpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet2NATGateway9182C01D"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "verta-ai-aws-ecs-service/Vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "verta-ai-aws-ecs-service/Vpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "verta-ai-aws-ecs-service/Vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    },
                    "internetGatewayId": {
                      "Ref": "VpcIGWD7BA715C"
                    }
                  }
                }
              }
            }
          },
          "awsvpc-verta-ai-ecs-cluster": {
            "id": "awsvpc-verta-ai-ecs-cluster",
            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "DefaultAutoScalingGroup": {
                "id": "DefaultAutoScalingGroup",
                "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup",
                "children": {
                  "InstanceSecurityGroup": {
                    "id": "InstanceSecurityGroup",
                    "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup"
                              }
                            ],
                            "vpcId": {
                              "Ref": "Vpc8378EB38"
                            }
                          }
                        }
                      }
                    }
                  },
                  "InstanceRole": {
                    "id": "InstanceRole",
                    "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/InstanceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/InstanceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "ec2.",
                                          {
                                            "Ref": "AWS::URLSuffix"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup"
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "ecr:GetAuthorizationToken",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy86D959DB",
                                "roles": [
                                  {
                                    "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupInstanceRoleCB1DBF6B"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          {
                            "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupInstanceRoleCB1DBF6B"
                          }
                        ]
                      }
                    }
                  },
                  "LaunchConfig": {
                    "id": "LaunchConfig",
                    "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LaunchConfig",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                      "aws:cdk:cloudformation:props": {
                        "imageId": {
                          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
                        },
                        "instanceType": "t2.micro",
                        "iamInstanceProfile": {
                          "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupInstanceProfile7539F89A"
                        },
                        "keyName": "datafy-keypair",
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "awsvpcvertaaiecsclusterDefaultAutoScalingGroupInstanceSecurityGroup3CEA3F4C",
                              "GroupId"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ec2SecurityGroupAF8145AA",
                              "GroupId"
                            ]
                          }
                        ],
                        "userData": {
                          "Fn::Base64": {
                            "Fn::Join": [
                              "",
                              [
                                "#!/bin/bash\necho ECS_CLUSTER=",
                                {
                                  "Ref": "awsvpcvertaaiecsclusterB1DFD127"
                                },
                                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config\n\n#!/bin/bash\nmkdir -p /ecs/backend/config/\nsudo curl -o /ecs/backend/config/config.yaml https://raw.githubusercontent.com/VertaAI/modeldb/master/backend/config/config.yaml\n"
                              ]
                            ]
                          }
                        }
                      }
                    }
                  },
                  "ASG": {
                    "id": "ASG",
                    "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/ASG",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                      "aws:cdk:cloudformation:props": {
                        "maxSize": "1",
                        "minSize": "1",
                        "launchConfigurationName": {
                          "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupLaunchConfigACF2147C"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup",
                            "propagateAtLaunch": true
                          }
                        ],
                        "vpcZoneIdentifier": [
                          {
                            "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                          },
                          {
                            "Ref": "VpcPublicSubnet2Subnet691E08A3"
                          }
                        ]
                      }
                    }
                  },
                  "DrainECSHook": {
                    "id": "DrainECSHook",
                    "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook",
                    "children": {
                      "Function": {
                        "id": "Function",
                        "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function",
                        "children": {
                          "ServiceRole": {
                            "id": "ServiceRole",
                            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "lambda.amazonaws.com"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "managedPolicyArns": [
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                          ]
                                        ]
                                      }
                                    ],
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup"
                                      }
                                    ]
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ec2:DescribeInstances",
                                                "ec2:DescribeInstanceAttribute",
                                                "ec2:DescribeInstanceStatus",
                                                "ec2:DescribeHosts"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "autoscaling:CompleteLifecycleAction",
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::Join": [
                                                  "",
                                                  [
                                                    "arn:",
                                                    {
                                                      "Ref": "AWS::Partition"
                                                    },
                                                    ":autoscaling:",
                                                    {
                                                      "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                      "Ref": "AWS::AccountId"
                                                    },
                                                    ":autoScalingGroup:*:autoScalingGroupName/",
                                                    {
                                                      "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupASG82CCB875"
                                                    }
                                                  ]
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:DescribeContainerInstances",
                                                "ecs:DescribeTasks"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "ecs:ListContainerInstances",
                                                "ecs:SubmitContainerStateChange",
                                                "ecs:SubmitTaskStateChange"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "awsvpcvertaaiecsclusterB1DFD127",
                                                  "Arn"
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:UpdateContainerInstancesState",
                                                "ecs:ListTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": {
                                                    "Fn::GetAtt": [
                                                      "awsvpcvertaaiecsclusterB1DFD127",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyF2B9A895",
                                        "roles": [
                                          {
                                            "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole14F4070E"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                              "aws:cdk:cloudformation:props": {
                                "code": {
                                  "zipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
                                },
                                "handler": "index.lambda_handler",
                                "role": {
                                  "Fn::GetAtt": [
                                    "awsvpcvertaaiecsclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole14F4070E",
                                    "Arn"
                                  ]
                                },
                                "runtime": "python3.6",
                                "environment": {
                                  "variables": {
                                    "CLUSTER": {
                                      "Ref": "awsvpcvertaaiecsclusterB1DFD127"
                                    }
                                  }
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "timeout": 310
                              }
                            }
                          },
                          "AllowInvoke:vertaaiawsecsserviceawsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic5EB5840E": {
                            "id": "AllowInvoke:vertaaiawsecsserviceawsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic5EB5840E",
                            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:vertaaiawsecsserviceawsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic5EB5840E",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "awsvpcvertaaiecsclusterDefaultAutoScalingGroupDrainECSHookFunction52229B7A",
                                    "Arn"
                                  ]
                                },
                                "principal": "sns.amazonaws.com",
                                "sourceArn": {
                                  "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8CD6BECA"
                                }
                              }
                            }
                          },
                          "Topic": {
                            "id": "Topic",
                            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                                  "aws:cdk:cloudformation:props": {
                                    "protocol": "lambda",
                                    "topicArn": {
                                      "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8CD6BECA"
                                    },
                                    "endpoint": {
                                      "Fn::GetAtt": [
                                        "awsvpcvertaaiecsclusterDefaultAutoScalingGroupDrainECSHookFunction52229B7A",
                                        "Arn"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "LifecycleHookDrainHook": {
                    "id": "LifecycleHookDrainHook",
                    "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "autoscaling.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sns:Publish",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8CD6BECA"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy34519B50",
                                    "roles": [
                                      {
                                        "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleE03641B3"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Topic": {
                        "id": "Topic",
                        "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "verta-ai-aws-ecs-service/awsvpc-verta-ai-ecs-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::AutoScaling::LifecycleHook",
                          "aws:cdk:cloudformation:props": {
                            "autoScalingGroupName": {
                              "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupASG82CCB875"
                            },
                            "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                            "defaultResult": "CONTINUE",
                            "heartbeatTimeout": 300,
                            "notificationTargetArn": {
                              "Ref": "awsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8CD6BECA"
                            },
                            "roleArn": {
                              "Fn::GetAtt": [
                                "awsvpcvertaaiecsclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleE03641B3",
                                "Arn"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "verta-ai-aws-ecs-service/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "verta-ai-aws-ecs-service/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "ec2-SecurityGroup": {
            "id": "ec2-SecurityGroup",
            "path": "verta-ai-aws-ecs-service/ec2-SecurityGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "verta-ai-aws-ecs-service/ec2-SecurityGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "verta-ai-aws-ecs-service/ec2-SecurityGroup",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "255.255.255.255/32",
                        "description": "Disallow all traffic",
                        "ipProtocol": "icmp",
                        "fromPort": 252,
                        "toPort": 86
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 22,
                        "toPort": 22,
                        "description": "from 0.0.0.0/0:22"
                      }
                    ],
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    }
                  }
                }
              }
            }
          },
          "modeldb-awspvc": {
            "id": "modeldb-awspvc",
            "path": "verta-ai-aws-ecs-service/modeldb-awspvc",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "verta-ai-aws-ecs-service/modeldb-awspvc/TaskRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "verta-ai-aws-ecs-service/modeldb-awspvc/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "verta-ai-aws-ecs-service/modeldb-awspvc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "cpu": 100,
                        "essential": true,
                        "image": "vertaaiofficial/modeldb-backend:latest",
                        "memory": 256,
                        "mountPoints": [
                          {
                            "containerPath": "/artifact-store/",
                            "readOnly": false,
                            "sourceVolume": "artifact-store"
                          },
                          {
                            "containerPath": "/config/",
                            "readOnly": false,
                            "sourceVolume": "config"
                          }
                        ],
                        "name": "modeldb-backend",
                        "portMappings": [
                          {
                            "containerPort": 8085,
                            "hostPort": 8085,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 8086,
                            "hostPort": 8086,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "modeldbawspvcmodeldbbackendLogGroup31773F15"
                            },
                            "awslogs-stream-prefix": "verta-ai-aws-ecs-service",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "VERTA_MODELDB_CONFIG",
                            "value": "/config/config.yaml"
                          }
                        ]
                      },
                      {
                        "cpu": 100,
                        "essential": true,
                        "image": "vertaaiofficial/modeldb-proxy:latest",
                        "memory": 256,
                        "name": "modeldb-proxy",
                        "portMappings": [
                          {
                            "containerPort": 8080,
                            "hostPort": 8080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "modeldbawspvcmodeldbproxyLogGroup7AB2F2BB"
                            },
                            "awslogs-stream-prefix": "verta-ai-aws-ecs-service",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "MDB_ADDRESS",
                            "value": "modeldb-backend:8085"
                          },
                          {
                            "name": "SERVER_HTTP_PORT",
                            "value": "8080"
                          }
                        ]
                      }
                    ],
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "modeldbawspvcExecutionRole40819C4D",
                        "Arn"
                      ]
                    },
                    "family": "vertaaiawsecsservicemodeldbawspvc0B0AEC76",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "EC2"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "modeldbawspvcTaskRole2FCECB88",
                        "Arn"
                      ]
                    },
                    "volumes": [
                      {
                        "name": "artifact-store",
                        "host": {
                          "sourcePath": "/ecs/artifact-store"
                        }
                      },
                      {
                        "name": "config",
                        "host": {
                          "sourcePath": "/ecs/backend/config"
                        }
                      }
                    ]
                  }
                }
              },
              "modeldb-backend": {
                "id": "modeldb-backend",
                "path": "verta-ai-aws-ecs-service/modeldb-awspvc/modeldb-backend",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "verta-ai-aws-ecs-service/modeldb-awspvc/modeldb-backend/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "verta-ai-aws-ecs-service/modeldb-awspvc/modeldb-backend/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              },
              "ExecutionRole": {
                "id": "ExecutionRole",
                "path": "verta-ai-aws-ecs-service/modeldb-awspvc/ExecutionRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "verta-ai-aws-ecs-service/modeldb-awspvc/ExecutionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "verta-ai-aws-ecs-service/modeldb-awspvc/ExecutionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "verta-ai-aws-ecs-service/modeldb-awspvc/ExecutionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "modeldbawspvcmodeldbbackendLogGroup31773F15",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "modeldbawspvcmodeldbproxyLogGroup7AB2F2BB",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "modeldbawspvcExecutionRoleDefaultPolicy2BEAD7E4",
                            "roles": [
                              {
                                "Ref": "modeldbawspvcExecutionRole40819C4D"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "modeldb-proxy": {
                "id": "modeldb-proxy",
                "path": "verta-ai-aws-ecs-service/modeldb-awspvc/modeldb-proxy",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "verta-ai-aws-ecs-service/modeldb-awspvc/modeldb-proxy/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "verta-ai-aws-ecs-service/modeldb-awspvc/modeldb-proxy/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "modeldb--7623": {
            "id": "modeldb--7623",
            "path": "verta-ai-aws-ecs-service/modeldb--7623",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "verta-ai-aws-ecs-service/modeldb--7623/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "verta-ai-aws-ecs-service/modeldb--7623",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "255.255.255.255/32",
                        "description": "Disallow all traffic",
                        "ipProtocol": "icmp",
                        "fromPort": 252,
                        "toPort": 86
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 8085,
                        "toPort": 8085,
                        "description": "from 0.0.0.0/0:8085"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 8086,
                        "toPort": 8086,
                        "description": "from 0.0.0.0/0:8086"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 22,
                        "toPort": 22,
                        "description": "from 0.0.0.0/0:22"
                      }
                    ],
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    }
                  }
                }
              }
            }
          },
          "awsvpc-ecs-demo-service": {
            "id": "awsvpc-ecs-demo-service",
            "path": "verta-ai-aws-ecs-service/awsvpc-ecs-demo-service",
            "children": {
              "Service": {
                "id": "Service",
                "path": "verta-ai-aws-ecs-service/awsvpc-ecs-demo-service/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "awsvpcvertaaiecsclusterB1DFD127"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "launchType": "EC2",
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Ref": "VpcPrivateSubnet1Subnet536B997A"
                          },
                          {
                            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "modeldb76239C0F6E0C",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "schedulingStrategy": "REPLICA",
                    "taskDefinition": {
                      "Ref": "modeldbawspvc2B97D0AF"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}